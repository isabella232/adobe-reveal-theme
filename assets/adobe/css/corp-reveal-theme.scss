---
---
$assets: {{"assets" | relative_url}};
//$assets: '/Users/dave/src/adobe-internal-presentations/assets';
@import 'corp-palette';

// A basic standard reveal theme is crucial for proper interop with the
// reveal.js ecosystem.  For example, the menu plugin plucks style information
// from the theme and reuses it
@import 'corp-reveal-theme-base';

// Have the slide cast a shadow, and gray the surroundings.
.reveal .slides {
  background-color: $backgroundColor;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
}
.reveal-viewport {
  background-color: #E5E5E5; // Color of area around slide.
}

// When a thing has explicit width or height, override the theme's limits.
// see https://github.com/hakimel/reveal.js/pull/3084.
.reveal *[width] {
  max-width: initial;
}
.reveal *[height] {
  max-height: initial;
}

// Never stretch images by default.
img { object-fit: cover; }

// --------------- Font Definitions ------------------
// A valid font is a map with keys, 'family', 'weight', 'unitsPerEm',
// 'hheaAscender', 'hheaDescender', and 'hheaLineGap'.

$adobeCleanVariants: (
  semilight:  (capsHeight: 677, familySuffix: '-semilight', weight: 300),
  regular: (capsHeight: 673, familySuffix: '', weight: 400),
  bold: (capsHeight: 666, familySuffix: '', weight: 700),
  extrabold: (capsHeight: 662, familySuffix: '', weight: 800));

@function adobe-clean-font($typeface) {
  $variant: map-get($adobeCleanVariants, $typeface);
  @return map-merge(
    $variant, (
      family: 'adobe-clean#{map-get($variant, "familySuffix")}',
      unitsPerEm: 1000,
      hheaAscender: 1013,
      hheaDescender: -239,
      hheaLineGap: 0));
}

$adobeCleanSemilight: adobe-clean-font('semilight');
$adobeCleanRegular: adobe-clean-font('regular');
$adobeCleanBold: adobe-clean-font('bold');
$adobeCleanExtrabold: adobe-clean-font('extrabold');

// -------- Global constants ------------
$slideWidth: 1920;
$slideHeight: 1080;

// ------- Keynote-specific translation -----------
// Dimensional parameters to Keynote mixins/functions are always in px, and
// placement is always expressed as (left, top, width, height), in that order.

@mixin keynote-text-inset($n) {
  padding: $n * 1px;
  box-sizing: border-box;
}

// Things that correspond to objects in keynote, positioned absolutely on the
// slide.
@mixin keynote-object($left, $top, $width, $height) {
  box-sizing: border-box;
  position: absolute;
  margin: 0px;
  padding: 0px;
  left: $left * 1px;
  top: $top * 1px;
  width: $width * 1px;
  height: $height * 1px;
}

@mixin keynote-text-box($left, $top, $width, $height, $inset: 4) {
  @include keynote-object($left, $top, $width, $height);
  @include keynote-text-inset($inset);
}

// Returns $font enhanced with keynote info for the given line spacing.
@function linespaced-font($font, $lineSpacing: 1.0) {
  // Each line of height $h will be vertically centered by the browser in an
  // area of line-height.
  $h: map-get($font, 'hheaAscender')
                  - map-get($font, 'hheaDescender');
  $unitsPerEm: map-get($font, 'unitsPerEm');
  $gap: map-get($font, 'hheaLineGap');
  $s: $lineSpacing;
  // Using these ::before/::after adjustments for nested lists with variable
  // font size will only work out perfectly if we are using a font with an “hhea
  // line gap” of zero (like Adobe Clean); otherwise when two nested lists are
  // closed we'll get an extra vertical offset that corresponds to the line gap:
  //
  // - I
  //   - A
  //     - 1 <==== HERE
  // - II
  $t: ($s - 1) * $h;
  @return map-merge(
    $font, (
      // Intentionally unitless line height.
      lineHeight: $s * ($h + $gap) / $unitsPerEm,
      trimTop: ($t + $s * $gap) * 0.5em / $unitsPerEm,
      trimBottom: ($t + (2 - $s) * $gap) * 0.5em / $unitsPerEm));
}

// Sets font size, family, weight, and line-height according to the given
// parameters.
@mixin text-style($spacedFont, $fontSize) {
  line-height: map-get($spacedFont, 'lineHeight');
  font-size: $fontSize * 1px;
  font-family: map-get($spacedFont, 'family');
  font-weight: map-get($spacedFont, 'weight');
}

// Trims the top and bottom of the current block element in the standard way to
// make text line up as it would in a Keynote text box.
@mixin basekick($spacedFont) {
  &::before {
    content: '';
    margin-bottom: -1 * map-get($spacedFont, 'trimTop');
    display: table;
  }
  &::after {
    content: '';
    margin-top: -1 * map-get($spacedFont, 'trimBottom');
    display: table;
  }
}

// Same as basekick, but useful for pseudo-elements injected via CSS;
// hijacks borders instead of before/after.
@mixin pseudo-basekick($spacedFont) {
  border-top: map-get($spacedFont, 'trimTop') solid transparent;
  border-bottom: map-get($spacedFont, 'trimBottom') solid transparent;
}

// Sets font size, line height, and baseline adjustment accordingly.
//
// If $inPseudo is true, baseline adjustment will be done with transparent
// borders instead of with pseudo-elements, which is useful when the text is
// itself being CSS-injected on a pseudo-element.
@mixin keynote-text($font, $fontSize, $lineSpacing: 1.0, $inPseudo: false) {
  $font: linespaced-font($font, $lineSpacing);
  @include text-style($font, $fontSize);
  @if $inPseudo {
    @include pseudo-basekick($font);
  }
  @else {
    @include basekick($font);
  }
}

// -----------------
// Placeholder selector for all block-level elements that are designed to
// contain text directly.
%block-level-text {
  /* dummy content required by ruby SASS */
}

:is(address, article, aside, blockquote, dialog, dd, dt, figcaption,
    h1, h2, h3, h4, h5, h6, li, p, pre)
{
  @extend %block-level-text;
}

// Adds keynote-style before paragraph spacing of $d px to any block level text
// in the invoking selector context.
@mixin keynote-before-paragraph-spacing($d) {
  %block-level-text {
    margin-top: $d * 1px;
  }
  %block-level-text:first-child:not(:empty) {
    margin-top: 0px;
  }
  :not(:first-child):not(:empty) %block-level-text:first-child:not(:empty) {
    margin-top: $d * 1px;
  }
}

// Placeholder selector for body-level things that should be treated as text
// blocks with possible font transitions.
%body-text {
  /* dummy content required by ruby SASS */
}

:is(address, article, aside, blockquote, dialog, dl, ol, figcaption,
    h1, h2, h3, h4, h5, h6, p, pre, ul)
{
  @extend %body-text;
}

.reveal .slides {
  * { box-sizing: border-box; }
  // Default layouts
  h1, h2, h3 {
    @include keynote-text-box(49, 52, 1810, 102);
  }
  h2 {
    @include keynote-text($adobeCleanExtrabold, 56, $lineSpacing: 0.8);
  }
  .body {
    $adobeCleanSemilight10: linespaced-font($adobeCleanSemilight, 1.0);
    @include keynote-text-box(49, 225, 1822, 793);
    @include keynote-before-paragraph-spacing(36); // 36.5 looks closer.
    @include text-style($adobeCleanSemilight10, 44);

    %body-text {
      @include basekick($adobeCleanSemilight10);
      padding: 0px;
    }

    :is(ul, ol, dl) :is(ul, ol, dl) {
      @include keynote-text($adobeCleanSemilight, 40);
      :is(ul, ol, dl) {
        @include keynote-text($adobeCleanSemilight, 36);
      }
    }

    // Scaled-down list bullets. See https://stackoverflow.com/a/41491657/125349
    ul {
      padding-inline-start: 0;
      $bulletOffset: 37px;
      > li {
        &::before {
          content: "•";
          position: absolute;
          left: -$bulletOffset;
          top: 0.25em;
          font-size: 0.7em;
        }
        margin-left: $bulletOffset;
        list-style-type: none;
        position: relative;
      }
    }
  }
}

// Format this pseudo-element for injecting an image at the given position.
@mixin layout-image-object($left, $top, $width, $height) {
  @include keynote-object($left, $top, $width, $height);
  background-size: $width * 1px $height * 1px;
  content: "";
}

// Inject the image at $url into this pseudo-element at the given position.
@mixin layout-image($url, $left, $top, $width, $height) {
  background-image: url($url);
  @include layout-image-object($left, $top, $width, $height);
}

// Background defaults
.reveal .slides .background {
  font-size: 16px;
  z-index: -1000;
  left: 0px; top: 0px;
  padding: 0px;
  margin: 0px;
  > * {
    width: 0; height: 0;
    position: absolute;
  }

  &::before, &::after, *::before, *::after {
    z-index: -1000;
  }

  &::before {
    @include layout-image(
      "../img/Adobe_Corporate_Horizontal_Lockup_NEW-Red_RGB-1894.png",
      63, 1036, 89, 23);
  }

  &::after {
    @include keynote-text-box(1473, 1033, 395, 34, $inset: 7);
    @include keynote-text($adobeCleanRegular, 16, $inPseudo: true);
    content: "© 2021 Adobe. All Rights Reserved. Adobe Confidential.";
    text-align: right;
    color: #6E6E6E;
  }
}

%no-footer {
  .background::before, .background::after {
    content: none;
    background-image: none;
  }
}

// ============== Layouts ==============
$titleLogoPosition: (137, 460, 111, 153);

.reveal .slides .layout.nolayout {
  .body {
    left: 0px; top: 0px;
    padding: 0px; margin: 0px;
    > * {
      position: absolute;
      margin: 0px;
    }
  }
}

$slideLeftInset: 52;
$slideInsetWidth: 1889 - $slideLeftInset;

// Injects credits for the given artist and country at the given top coordinate
// into the layout.
@mixin community-credit($artist, $country, $top) {
  @include keynote-text-box(
    $slideLeftInset, $top, $slideInsetWidth, 39, $inset: 7);
  @include keynote-text($adobeCleanRegular, 20);
  color: white;
  > span {
    &:nth-child(1) {
      &::before { content: "Artwork by "; }
      &::after {
        @include text-style(linespaced-font($adobeCleanExtrabold), 20);
        content: $artist;
      }
    }
    &:nth-child(2) {
      &::before { content: " / "; }
      &::after {
        font-size: 18px;
        content: $country;
      }
    }
  }
}

// Community art title slides
.reveal .slides .layout.community-title-slide {
  @extend %no-footer;
  h1 {
    @include keynote-text-box(348, 441, 932, 192, $inset: 0);
    @include keynote-text($adobeCleanExtrabold, 72);
  }
  h2 {
    @include keynote-text-box(348, 649, 930, 170, $inset: 0);
    @include keynote-text($adobeCleanExtrabold, 40);
  }

  .background::before {
    @include layout-image("../img/image13-22.tif", $titleLogoPosition...);
  }

  @mixin title-art($imageUrl, $left, $top, $width, $height, $artist, $country) {
    .background {
      &::after {
        @include layout-image($imageUrl, $left, $top, $width, $height);
        $bevelLeft: 1128;
        $bevelRight: 1574;
        clip-path: polygon(
          ($bevelRight - $left)*1px (-$top)*1px,
          ($slideWidth - $left)*1px (-$top)*1px,
          ($slideWidth - $left)*1px ($slideHeight - $top)*1px,
          ($bevelLeft - $left)*1px ($slideHeight - $top)*1px);
        z-index: -1;
      }

      // Credits
      > div:first-child {
        text-align: right;
        @include community-credit($artist, $country, $top: 1019);
      }
    }
  }

  &.evans {
    @include title-art(
      "../img/image12-20.jpeg", 627, -149, 1304, 1301, "Davy Evans", "UK");
  }

  &.swopes {
    @include title-art(
      "../img/image14-23.jpeg", 975, 0, 1080, 1080, "Elise Swopes", "USA");
  }

  &.sato {
    @include title-art(
      "../img/image15-25.jpeg", 960, -14, 1110, 1109, "Momomi Sato", "Japan");
  }

  &.zhu {
    @include title-art(
      "../img/image16-27.jpeg", 544, 0, 1378, 1080, "UV Zhu", "China");
  }
}

// Community art "About the artist" slides.
.reveal .slides .layout.community-about-slide {
  @extend %no-footer;
  h2 {
    @include keynote-text-box($slideLeftInset, 51, 1920, 46, $inset: 7);
    @include keynote-text($adobeCleanExtrabold, 26);
  }

  // "Made with", when appropriate
  .background > div:nth-child(2)::before {
    @include keynote-text-box($slideLeftInset, 946, 69, 29, $inset: 7);
    @include keynote-text($adobeCleanBold, 12);
  }

  @mixin about-art($imageUrl, $left, $top, $width, $height, $artist, $story) {
    $bevelLeft: 433;
    $bevelWidth: 453;
    $bevelRight: $bevelLeft + $bevelWidth;

    .background {
      &::before {
        @include layout-image($imageUrl, $left, $top, $width, $height);
        clip-path: polygon(
          ($bevelLeft - $left)*1px  (0 - $top)*1px,
          ($slideWidth - $left)*1px (0 - $top)*1px,
          ($slideWidth - $left)*1px ($slideHeight - $top)*1px,
          ($bevelRight - $left)*1px ($slideHeight - $top)*1px);
      }

      > div:nth-child(1) {
        @include keynote-text-box($slideLeftInset, 438, 540, 574, $inset: 7);
        > span:first-child {
          &::before {
            display: block;
            margin-bottom: 16px;
            @include keynote-text($adobeCleanExtrabold, 28, $inPseudo: true);
            content: $artist;
          }
          &::after {
            display: block;
            @include keynote-text(
              $adobeCleanRegular, 24, $lineSpacing: 1.1, $inPseudo: true);
            content: $story;
          }
        }
      }
    }
  }

  @mixin made-with($image1Url, $image1Width, $image2Url, $image2Width) {
    .background > div:nth-child(2) {
      &::before { content: "Made with" }
      > span:first-child {
        &::before {
          @include layout-image($image1Url, 59, 978, $image1Width, 35);
        }
        &::after {
          @include layout-image($image2Url, 310, 978, $image2Width, 35);
        }
      }
    }
  }

  &.evans {
    @include about-art(
      "../img/image12-20.jpeg", 249, -433, 1711, 1711, "Davy Evans",
      "UK-based digital artist and motion designer Davy Evans fuses analog"
        " and digital techniques to create ethereal, abstract imagery"
        " inspired by nature. Experimenting with photography, light, and"
        " liquid, he uses Adobe Photoshop and Adobe After Effects to compose"
        " otherworldly scenes. As communities faced the isolation of 2020,"
        " Evans saw the importance of maintaining a connection to natural"
        " phenomena in this piece. He used Adobe Camera Raw and Adobe"
        " Photoshop to create beautiful floral compositions that represent"
        " the separation we all felt from the world outside our windows.");

    @include made-with(
      "../img/image20-38.tif", 220, "../img/image21-40.tif", 234);
  }
  &.swopes {
    @include about-art(
      "../img/image14-23.jpeg", 431, -143, 1489, 1489, "Elise Swopes",
      "New York City-based photographer and graphic designer Elise Swopes"
        " manipulates the everyday into unexpected works of art. With her"
        " mobile phone, Adobe Photoshop, and Adobe Photoshop Lightroom, she"
        " creates whimsical, weird, dreamlike scenes. This piece was"
        " inspired from a recent visit to Copenhagen, where the bold colors"
        " and shapes of Danish architecture made quite an impression. A"
        " brilliant yellow apartment building inspired Swopes to create"
        " another entry in her surrealistic series featuring giraffes in"
        " unusual settings.");
    @include made-with(
      "../img/image20-38.tif", 220, "../img/image25-45.tif", 332);
  }

  &.sato {
    @include about-art(
      "../img/image15-25.jpeg", 431, -182, 1658, 1658, "Momomi Sato",
      "Tokyo-based artist Momomi Sato meticulously applies paint using"
        " toothpicks to create fanciful, pointillistic works of animals,"
        " patterns, and other colorful subjects. With a style that ranges"
        " from abstract to kawaii, Sato’s paintings are as charming as they"
        " are beautiful. For this piece, a train ride prompted an"
        " exploration of systems that influence daily life. As she stared"
        " intently at the pattern on the seats, the lines and shapes seemed"
        " to move and draw Sato into another dimension. She recreated the"
        " sensation by hand with acrylic paint on canvas.");
  }

  &.zhu {
    @include about-art(
      "../img/image16-27.jpeg", 386, -40, 1535, 1206, "UV Zhu",
      "With an eye for the abstract, Chinese artist UV Zhu remixes patterns,"
        " textures, and colors to explore the future of fashion. Using Adobe"
        " Photoshop, Adobe Illustrator, and Maxon Cinema 4D, he blends"
        " surreal settings, organic shapes, and even favorite foods to"
        " challenge convention. Inspired by his travels—around the Internet"
        " and in real life—for this piece, UV fantasized about characters"
        " moving through an imaginary world, the things they might do, and"
        " what they might wear. The result is a bright, colorful expression"
        " of joy and positivity.");
    @include made-with(
      "../img/image20-38.tif", 220, "../img/image27-48.tif", 214);
  }
}

// Community art end-of-presentation slides
.reveal .slides .layout.community-closer-slide {
  // Hide the headers
  h1, h2, h3, h4, h5, h6 { display: none; }

  .background::after {
    @include layout-image("../img/image22-42.tif", 907, 466, 107, 148);
  }
  .background > div:nth-child(2) {
    &::before { @include layout-image-object(59, 1001, 36, 35); }
    &::after { @include layout-image-object(107, 1001, 36, 35); }
  }

  @mixin community-closer(
    $imageUrl, $left, $top, $width, $height, $artist, $country) {
    .background {
      &::before {
        @include layout-image($imageUrl, $left, $top, $width, $height);
        clip-path: inset(
          (-$top)*1px ($width + $left - $slideWidth)*1px
          ($height + $top - $slideHeight)*1px (-$left)*1px
        );
      }
      > div:first-child {
        text-align: left;
        @include community-credit($artist, $country, $top: 959);
      }
    }
  }

  &.evans {
    @include community-closer(
      "../img/image12-20.jpeg", -3, -459, 1925, 1925, "Davy Evans", "UK");
    .background > div:nth-child(2) {
      &::before { background-image: url("../img/image23-43.tif"); }
      &::after { background-image: url("../img/image24-44.tif"); }
    }
  }

  &.swopes {
    @include community-closer(
      "../img/image14-23.jpeg", -58, -467, 1981, 1981, "Elise Swopes", "USA");
    .background > div:nth-child(2) {
      &::before { background-image: url("../img/image23-43.tif"); }
      &::after { background-image: url("../img/image26-47.tif"); }
    }
  }

  &.sato {
    @include community-closer(
      "../img/image15-25.jpeg", -15, -422, 1950, 1950, "Momomi Sato", "Japan");
    .background > div:first-child { top: 997px; }
  }

  &.zhu {
    @include community-closer(
      "../img/image16-27.jpeg", 0, -196, 1920, 1509, "UV Zhu", "China");
    .background > div:nth-child(2) {
      &::before { background-image: url("../img/image23-43.tif"); }
      &::after { background-image: url("../img/image28-50.tif"); }
    }
  }
}

.reveal .slides .layout.title-slide {
  @extend %no-footer;
  .body { width: 0; height: 0; }
  * { color: white; }
  h1 {
    @include keynote-text-box(346, 443, 965, 186);
    @include keynote-text($adobeCleanExtrabold, 72, $lineSpacing: 0.9);
  }
  h2 {
    @include keynote-text-box(351, 654, 982, 303);
    @include keynote-text($adobeCleanExtrabold, 40);
  }

  .background::before {
    @include layout-image(
      "../img/title-standard-1521.png", 0, 0, $slideWidth, $slideHeight);
  }

  .background::after {
    @include layout-image("../img/pasted-image-8952.pdf", $titleLogoPosition...);
  }
}

%section-divider-alt-background {
  @extend %no-footer;
  .background::before {
    @include layout-image(
      "../img/divider-std-white-alt-1553.png", 0, 0, $slideWidth, $slideHeight);
  }
}

%section-divider-background {
  @extend %no-footer;
  .background::before {
    @include layout-image(
      "../img/divider-std-white-1544.png", 0, 0, $slideWidth, $slideHeight);
  }
}

.reveal .slides {
  .layout.section-divider-slide, .layout.section-divider-alt-slide {
    h1 {
      @include keynote-text-box(123, 446, 1146, 351);
      @include keynote-text($adobeCleanExtrabold, 72, $lineSpacing: 0.8);
    }
    .body { width: 0; height: 0; }
  }

  .layout.section-divider-slide {
    @extend %section-divider-background;
  }

  .layout.section-divider-alt-slide, div.layout-agenda {
    @extend %section-divider-alt-background;
  }
}

// Local Variables:
// css-indent-offset: 2
// smie-indent-basic: 2
// End:
